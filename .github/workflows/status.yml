name: Status Checker

on:
  workflow_call:
    inputs:
      timeout_minutes:
        required: false
        type: number
        default: 4
      repository:
        required: true
        type: string
      ci_repository:
        required: true
        type: string
      ci_repository_branch:
        required: true
        type: string
      ci_repository_path:
        required: true
        type: string
      repository_owner:
        required: false
        type: string
      status_script:
        required: true
        type: string
    secrets:
      access_token:
        required: true
      slack_bot_token:
        required: true
      app_id:
        required: false
      app_private_key:
        required: false

jobs:
  status-checker:
    name: Status Checker
    runs-on: ubuntu-20.04
    timeout-minutes: ${{ inputs.timeout_minutes }}
    steps:
      - name: Generate access token
        if: secrets.app_id && secrets.app_private_key
        id: generate_access_token
        uses: actions/create-github-app-token@v1
        with:
          app-id: ${{ secrets.app_id }}
          private-key: ${{ secrets.app_private_key }}
          owner: ${{ inputs.repository_owner }}
      - name: Checkout branch
        uses: actions/checkout@v3
        with:
          path: ${{ inputs.repository }}
      - name: Clone CI repository
        uses: actions/checkout@v3
        with:
          repository: ${{ inputs.ci_repository }}
          ref: ${{ inputs.ci_repository_branch }}
          path: ${{ inputs.ci_repository_path }}
          token: ${{ secrets.access_token || steps.generate_access_token.outputs.token }}
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.6"
          architecture: "x64"
      - name: Install python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -U pip wheel
          pip install requests
      - name: Run CI status checker
        env:
          LENDINGFRONT_PATH: ${{ github.workspace }}
          PYTHONPATH: ${{ github.workspace }}/
        run: |
          python ${{ inputs.status_script }} \
            --token=${{ secrets.access_token || steps.generate_access_token.outputs.token }} \
            --repository-path=${{ github.repository }} \
            --target-workflow="Staging Checks" \
            --ref=staging \
            --day=Thursday
