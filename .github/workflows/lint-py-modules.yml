name: Lint Python Modules

on:
  workflow_call:
    inputs:
      timeout_minutes:
        required: false
        type: number
        default: 5
      repository:
        required: true
        type: string
      clone_repository_script:
        required: true
        type: string
      repositories:
        required: true
        type: string
      repositories_default_branch:
        required: true
        type: string
      ci_repository:
        required: true
        type: string
      ci_repository_name:
        required: true
        type: string
      ci_repository_branch:
        required: true
        type: string
      ci_repository_path:
        required: true
        type: string
      badges_repository:
        required: true
        type: string
      badges_repository_branch:
        required: true
        type: string
      badges_repository_path:
        required: true
        type: string
      pylint_command:
        required: true
        type: string
      update_pylint_command:
        required: true
        type: string

    secrets:
      app_id:
        required: true
      app_private_key:
        required: true
      slack_bot_token:
        required: true

jobs:
  lint-py:
    if: ${{ false }}
    name: Lint Python
    runs-on: ubuntu-20.04
    timeout-minutes: ${{ inputs.timeout_minutes }}
    steps:
      - name: Install OS dependencies
        run: |
          sudo apt-get install libxml2-dev libxslt-dev
          sudo ln -s /usr/include/locale.h /usr/include/xlocale.h
      - name: Generate access token
        id: generate_access_token
        uses: actions/create-github-app-token@v1
        with:
          app-id: ${{ secrets.app_id }}
          private-key: ${{ secrets.app_private_key }}
          owner: ${{  inputs.repository_owner }}
          repositories: ${{ inputs.ci_repository_name }}
      - name: Checkout branch
        uses: actions/checkout@v3
        with:
          path: ${{ inputs.repository }}
      - name: Clone CI repository
        uses: actions/checkout@v3
        with:
          repository: ${{ inputs.ci_repository }}
          ref: ${{ inputs.ci_repository_branch }}
          path: ${{ inputs.ci_repository_path }}
          token: ${{ steps.generate_access_token.outputs.token }}
          persist-credentials: false
      - name: Clone repositories
        run: |
          bash ./${{ inputs.clone_repository_script }} ${{ inputs.repositories }} ${{ inputs.repositories_default_branch }} ${{ steps.generate_access_token.outputs.token }}
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: "2.7"
          architecture: "x64"
      - name: Cache pip
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: py-${{ inputs.python_version }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            py-${{ inputs.python_version }}-pip-${{ hashFiles('**/requirements.txt') }}
      - name: Install python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -U pip wheel
          pip install pylint==1.9.5
      - name: Show python environment
        run: |
          python --version
          python -m pip list
      - name: Run python lint
        env:
          LENDINGFRONT_PATH: ${{ github.workspace }}
          PYTHONPATH: ${{ github.workspace }}/
        run: ${{ inputs.pylint_command }}
      - name: Update Pylint score
        if: github.event_name == 'push'
        run: bash ${{ inputs.update_pylint_command }}
      - name: Generate report
        if: (failure() || cancelled()) && (github.event_name == 'push' || github.event_name == 'workflow_dispatch')
        uses: archive/github-actions-slack@v1.0.3
        with:
          slack-bot-user-oauth-access-token: ${{ secrets.slack_bot_token }}
          slack-channel: "#ci-status"
          slack-text: ":red_circle: `${{github.repository}}` - `${{github.job}}` \n
            *run_id:* `${{github.run_id}}` *run_number:* `${{github.run_number}}` \n
            *author:* `${{github.actor}}`"
