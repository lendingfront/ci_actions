name: CI Setup

on:
  workflow_call:
    inputs:
      timeout_minutes:
        required: false
        type: number
        default: 2
      ci_repository:
        required: true
        type: string
      ci_repository_branch:
        required: true
        type: string
      ci_repository_path:
        required: true
        type: string
      git_script:
        required: true
        type: string
      git_script_branch:
        required: true
        type: string
      process_script:
        required: true
        type: string
      process_py_files:
        required: false
        type: boolean
        default: false
      process_py_migrations_files:
        required: false
        type: boolean
        default: false
      process_js_core_files:
        required: false
        type: boolean
        default: false
      process_js_other_apps_files:
        required: false
        type: boolean
        default: false
    outputs:
      py-files:
        description: "Python files"
        value: ${{ jobs.ci-setup.outputs.py-files }}
      py-migrations-files:
        description: "Python migrations files"
        value: ${{ jobs.ci-setup.outputs.py-migrations-files }}
      js-core-files:
        description: "Javascript core files"
        value: ${{ jobs.ci-setup.outputs.js-core-files }}
      js-other-apps-files:
        description: "Javascript other apps files"
        value: ${{ jobs.ci-setup.outputs.js-other-apps-files }}
    secrets:
      access_token:
        required: true

jobs:
  ci-setup:
    name: CI Setup
    runs-on: ubuntu-latest
    timeout-minutes: ${{ inputs.timeout_minutes }}
    outputs:
      py-files: ${{ steps.py-files.outputs.files }}
      py-migrations-files: ${{ steps.py-migrations-files.outputs.files }}
      js-core-files: ${{ steps.js-core-files.outputs.files }}
      js-other-apps-files: ${{ steps.js-other-apps-files.outputs.files }}
    steps:
      - name: Checkout branch
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Clone CI repository
        uses: actions/checkout@v2
        with:
          repository: ${{ inputs.ci_repository }}
          ref: ${{ inputs.ci_repository_branch }}
          path: ${{ inputs.ci_repository_path }}
          token: ${{ secrets.access_token }}
      - name: Setup Python
        uses: actions/setup-python@v2
        with:
          python-version: "3.6"
          architecture: "x64"
      - name: Search all files
        run: |
          bash ${{ inputs.git_script }} -b ${{ inputs.git_script_branch }}
          cat out.txt
      - id: py-files
        if: ${{ inputs.process_py_files }}
        name: Search Python files
        run: |
          FILES=$(python ${{ inputs.process_script }} --extension=".py")
          echo ::set-output name=files::$FILES
          echo $FILES
      - id: py-migrations-files
        if: ${{ inputs.process_py_migrations_files }}
        name: Search Python migrations files
        run: |
          FILES=$(python ${{ inputs.process_script }} --extension=".py" --target-path="migrations/versions")
          echo ::set-output name=files::$FILES
          echo $FILES
      - id: js-core-files
        if: ${{ inputs.process_js_core_files }}
        name: Search Javascript core files
        run: |
          FILES=$(python ${{ inputs.process_script }} --extension=".js" --target-path="app/src")
          echo ::set-output name=files::$FILES
          echo $FILES
      - id: js-other-apps-files
        if: ${{ inputs.process_js_other_apps_files }}
        name: Search Javascript other apps files
        run: |
          FILES=$(python ${{ inputs.process_script }} --extension=".js" --target-path="app/client")
          echo ::set-output name=files::$FILES
          echo $FILES
